infogears_covid_data$leftForWork <-
as.factor(infogears_covid_data$leftForWork)
infogears_covid_data$faceCovering <-
as.factor(infogears_covid_data$faceCovering)
# reorder levels
levels(infogears_covid_data$healthIssues) <- c("noIssues", "someIssues", "chronicIssues")
levels(infogears_covid_data$mentalHealthImpact) <- c("noImpact", "someImpace", "significantImpact")
levels(infogears_covid_data$virusTest) <- c("notTested", "awaitingResults", "negative", "positive")
levels(infogears_covid_data$gender) <- c("female", "male", "other", "notShared")
#Saving a new dataset with changes above
write.csv(infogears_covid_data, "Covid_data")
levels(infogears_covid_data$leftForWork)
levles(infogears_covid_data$gender)
levels(infogears_covid_data$gender)
levles(infogears_covid_data$healthIssues)
levels(infogears_covid_data$healthIssues)
levels(infogears_covid_data$Person_Wellness )
levels(infogears_covid_data$antibodyTest )
levles(infogears_covid_data$exposureLevel )
levels(infogears_covid_data$exposureLevel )
levels(infogears_covid_data$gender)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.character(infogears_covid_data$gender)
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
levels(infogears_covid_data$gender))
levels(infogears_covid_data$gender)
levles(infogears_covid_data$gender) <- c("female", "male", "notShared", "notWantToShare", "other")
levels(infogears_covid_data$gender) <- c("female", "male", "notShared", "notWantToShare", "other")
levels(infogears_covid_data$gender)
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
infogears_covid_data$Age <- as.character(infogears_covid_data$Age)
infogears_covid_data$Age <- as.factor(infogears_covid_data$Age)
levels(infogears_covid_data$Age)
# categorical variable
# no sypmtoms, some symptoms
infogears_covid_data$Person_Wellness <-
as.factor(infogears_covid_data$Person_Wellness)
# negative, notTested, positive
infogears_covid_data$antibodyTest <-
as.factor(infogears_covid_data$antibodyTest)
# doNotKnow, haveDirectContact
infogears_covid_data$exposureLevel <-
as.factor(infogears_covid_data$exposureLevel)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
levels(infogears_covid_data$gender)
# replace all "notWantToShare" to "notShared"
infogears_covid_data <- infogears_covid_data %>%
mutate(gender = ifelse(gender == "notWantToShare", "notShared", gender))
levels(infogears_covid_data$gender)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
levels(infogears_covid_data$gender)
levels(infogears_covid_data$gender) <- c("female", "male", "notShared", "notWantToShare", "other")
levels(infogears_covid_data$gender)
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
infogears_covid_data$Age <- as.character(infogears_covid_data$Age)
infogears_covid_data$Age <- as.factor(infogears_covid_data$Age)
levels(infogears_covid_data$Age)
# categorical variable
# no sypmtoms, some symptoms
infogears_covid_data$Person_Wellness <-
as.factor(infogears_covid_data$Person_Wellness)
# negative, notTested, positive
infogears_covid_data$antibodyTest <-
as.factor(infogears_covid_data$antibodyTest)
# doNotKnow, haveDirectContact
infogears_covid_data$exposureLevel <-
as.factor(infogears_covid_data$exposureLevel)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
infogears_covid_data$Age <- as.character(infogears_covid_data$Age)
infogears_covid_data$Age <- as.factor(infogears_covid_data$Age)
levels(infogears_covid_data$Age)
# categorical variable
# no sypmtoms, some symptoms
infogears_covid_data$Person_Wellness <-
as.factor(infogears_covid_data$Person_Wellness)
# negative, notTested, positive
infogears_covid_data$antibodyTest <-
as.factor(infogears_covid_data$antibodyTest)
# doNotKnow, haveDirectContact
infogears_covid_data$exposureLevel <-
as.factor(infogears_covid_data$exposureLevel)
levels(infogears_covid_data$gender)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
str(infogears_covid_data)
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
infogears_covid_data$Age <- as.character(infogears_covid_data$Age)
infogears_covid_data$Age <- as.factor(infogears_covid_data$Age)
levels(infogears_covid_data$Age)
# categorical variable
# no sypmtoms, some symptoms
infogears_covid_data$Person_Wellness <-
as.factor(infogears_covid_data$Person_Wellness)
levels(infogears_covid_data$gender)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
# replace all "notWantToShare" to "notShared"
infogears_covid_data <- infogears_covid_data %>%
mutate(gender = ifelse(gender == "notWantToShare", "notShared", gender))
levels(infogears_covid_data$gender)
# 0, 1
infogears_covid_data$bodyAche <-
as.factor(infogears_covid_data$bodyAche)
# 0, 1
infogears_covid_data$diarrhea <-
as.factor(infogears_covid_data$diarrhea)
# 0, 1
infogears_covid_data$difficultyBreathing <-
as.factor(infogears_covid_data$difficultyBreathing)
# 0, 1
infogears_covid_data$disorientation <-
as.factor(infogears_covid_data$disorientation)
# 0, 1
infogears_covid_data$fatigue <-
as.factor(infogears_covid_data$fatigue)
# 0, 1
infogears_covid_data$headAche <-
as.factor(infogears_covid_data$headAche)
# 0, 1
infogears_covid_data$irritatedEyes <-
as.factor(infogears_covid_data$irritatedEyes)
# 0, 1
infogears_covid_data$lossOfSmell <-
as.factor(infogears_covid_data$lossOfSmell)
# 0, 1
infogears_covid_data$persistentCough <-
as.factor(infogears_covid_data$persistentCough)
# 0, 1
infogears_covid_data$soreThroat <-
as.factor(infogears_covid_data$soreThroat)
# 0, 1
infogears_covid_data$temperature <-
as.factor(infogears_covid_data$temperature)
# 0, 1
infogears_covid_data$leftForExercise <-
as.factor(infogears_covid_data$leftForExercise)
# 0, 1
infogears_covid_data$leftForShopping <-
as.factor(infogears_covid_data$leftForShopping)
# 0, 1
infogears_covid_data$leftForWork <-
as.factor(infogears_covid_data$leftForWork)
infogears_covid_data$faceCovering <-
as.factor(infogears_covid_data$faceCovering)
# reorder levels
levels(infogears_covid_data$healthIssues) <- c("noIssues", "someIssues", "chronicIssues")
#Saving a new dataset with changes above
write.csv(infogears_covid_data, "Covid_data")
View("Covid_data")
shiny::runApp()
Vies("Covid_data")
View("Covid_data")
runApp()
Covid_data <- read.csv("Covid_data")
Covid_data <- read.csv("Covid_data")
View("Covid_data")
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
# import libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
# import datasets
infogears_covid_data <- read.csv("covid-07-13-2020.csv")
# data cleaning
# replace all "didNotLefts" to "didNotLeave" in lefHomeTimes
infogears_covid_data <- infogears_covid_data %>%
mutate(leftHomeTimes = ifelse(leftHomeTimes == "didNotLeft", "didNotLeave", leftHomeTimes))
# add Person_Wellness depending on having symptoms
infogears_covid_data <- infogears_covid_data %>%
mutate(Person_Wellness = ifelse(noSymptoms == 1, "No symptoms", "Some symptoms"))
# add Age
# "13_17" "18_25" "26_35" "36_45" "46_55" "56_65" "66_75" "75_and_more"
infogears_covid_data$Age <-
str_extract_all(infogears_covid_data$X.age, pattern = "[0-9]{2}.*")
infogears_covid_data$Age <- as.character(infogears_covid_data$Age)
infogears_covid_data$Age <- as.factor(infogears_covid_data$Age)
levels(infogears_covid_data$Age)
# categorical variable
# no sypmtoms, some symptoms
infogears_covid_data$Person_Wellness <-
as.factor(infogears_covid_data$Person_Wellness)
# female, male, notShared, notWantToShare, other
infogears_covid_data$gender <-
as.factor(infogears_covid_data$gender)
# 0, 1
infogears_covid_data$bodyAche <-
as.factor(infogears_covid_data$bodyAche)
# 0, 1
infogears_covid_data$diarrhea <-
as.factor(infogears_covid_data$diarrhea)
# 0, 1
infogears_covid_data$difficultyBreathing <-
as.factor(infogears_covid_data$difficultyBreathing)
# 0, 1
infogears_covid_data$disorientation <-
as.factor(infogears_covid_data$disorientation)
# 0, 1
infogears_covid_data$fatigue <-
as.factor(infogears_covid_data$fatigue)
# 0, 1
infogears_covid_data$headAche <-
as.factor(infogears_covid_data$headAche)
# 0, 1
infogears_covid_data$irritatedEyes <-
as.factor(infogears_covid_data$irritatedEyes)
# 0, 1
infogears_covid_data$lossOfSmell <-
as.factor(infogears_covid_data$lossOfSmell)
# 0, 1
infogears_covid_data$persistentCough <-
as.factor(infogears_covid_data$persistentCough)
# 0, 1
infogears_covid_data$soreThroat <-
as.factor(infogears_covid_data$soreThroat)
# 0, 1
infogears_covid_data$temperature <-
as.factor(infogears_covid_data$temperature)
# 0, 1
infogears_covid_data$leftForExercise <-
as.factor(infogears_covid_data$leftForExercise)
# 0, 1
infogears_covid_data$leftForShopping <-
as.factor(infogears_covid_data$leftForShopping)
# 0, 1
infogears_covid_data$leftForWork <-
as.factor(infogears_covid_data$leftForWork)
infogears_covid_data$faceCovering <-
as.factor(infogears_covid_data$faceCovering)
# reorder levels
levels(infogears_covid_data$healthIssues) <- c("noIssues", "someIssues", "chronicIssues")
levels(infogears_covid_data$mentalHealthImpact) <- c("noImpact", "someImpace", "significantImpact")
levels(infogears_covid_data$virusTest) <- c("notTested", "awaitingResults", "negative", "positive")
#Saving a new dataset with changes above
write.csv(infogears_covid_data, "Covid_data")
Covid_data <- read.csv("Covid_data")
View("Covid_data")
View(Covid_data)
View(Covid_data)
View(Covid_data)
Veiw("Covid_data")
View("Covid_data")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('test')
runApp()
runApp()
runApp()
runApp('test')
navbarPage("App Title",
tabPanel("Plot"),
tabPanel("Summary"),
tabPanel("Table")
)
install.packages("shinyUI")
install.packages("shinyUI")
updateR()
install.packages("installr")
>>>>>>> 41182ed8408eb871e0c029c24e90d896c9212726
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
data_usa <- data_with_cases%>%
filter(iso_code=="USA" & complete.cases(iso_code) & date>="2020-04-16" & date<="2020-07-13")
data_with_cases <- read.csv("owid-covid-data.csv",stringsAsFactors = F)
data_usa <- data_with_cases%>%
filter(iso_code=="USA" & complete.cases(iso_code) & date>="2020-04-16" & date<="2020-07-13")
ccolnames(data_usa)
colnames(data_usa)
runApp()
colnames(data_with_cases)<-c("iso_code","continent","location","date","Total cases","New cases","Total deaths",
"New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)",
"tests_units","stringency_index","population",
"population_density","median_age","aged_65_older",
"aged_70_older","gdp_per_capita","extreme_poverty","cardiovasc_death_rate","diabetes_prevalence","female_smokers","male_smokers","handwashing_facilities","hospital_beds_per_thousand",
"life_expectancy"  )
colnames(data_with_cases)<-c("iso_code","continent","location","date","Total cases","New cases","Total deaths",
"New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)",
"tests_units","stringency_index","population",
"population_density","median_age","aged_65_older",
"aged_70_older","gdp_per_capita","extreme_poverty","cardiovasc_death_rate","diabetes_prevalence","female_smokers","male_smokers","handwashing_facilities","hospital_beds_per_thousand",
"life_expectancy"  )
colnames(data_with_cases)
runApp()
colnames(data_usa)[6:19]
colnames(data_usa)<-c("New cases","Total deaths","New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)",
"tests_units")
colnames(data_usa)[6:19]
data_usa <- data_with_cases%>%
filter(iso_code=="USA" & complete.cases(iso_code) & date>="2020-04-16" & date<="2020-07-13")
colnames(data_usa)[6:19]
colnames(data_usa)[6:19]<-c("New cases","Total deaths","New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)",
"tests_units")
colnames(data_usa)[6:19]
runApp()
colnames(data_usa)[6:18]<-c("New cases","Total deaths","New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)")
colnames(data_usa)[6:18]
runApp()
runApp()
runApp()
colnames(data_usa)[6:18]
View(data_usa)
runApp()
runApp()
runApp()
runApp()
data_with_cases <- read.csv("owid-covid-data.csv",stringsAsFactors = F)
data_usa <- data_with_cases%>%
filter(iso_code=="USA" & complete.cases(iso_code) & date>="2020-04-16" & date<="2020-07-13")
colnames(data_usa)[6:18]<-c("New cases","Total deaths","New deaths","Total cases(per million)", "New cases(per million)", "Total deaths(per million)","New deaths(per million)",
"Total tests","New tests","Total tests(per thousand)","New tests(per thousand)","New tests smoothed","New tests smoothed(per thousand)")
View(data_usa)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
