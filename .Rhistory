select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_name %in% c("United States of America"))
View(IP_data_sub)
View(IP_data_sub)
IP_data_sub <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
IP_data <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
View(IP_data)
Covid_data <- read.csv("Covid_data.csv")
IP_data <- read.csv("IP2LOCATION-LITE-DB3.CSV", stringsAsFactors = T)
colnames(IP_data) <- c("ip_from", "ip_to", "country_code", "country_name","region_name","city_name")
Covid_data$ip_class <- ip_classify(Covid_data$ip)
Covid_data$ip_numeric <- ip_to_numeric(Covid_data$ip)
#Getting IP ranges for only US
IP_data <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(c(IP_data$ip_from[i],IP_data$ip_to[i]))
}
}
}
View(Covid_data)
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(c(IP_data$region_name[i],IP_data$city_name[i]))
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(i) #(c(IP_data$region_name[i],IP_data$city_name[i]))
}
}
}
get_Region_and_City(2931940067)
IP_data[654984,]
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(IP_data[i,5],IP_data[i,6])
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(c(IP_data[i,5],IP_data[i,6]))
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(IP_data[,i])
}
}
}
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(IP_data[i])
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(IP_data[i,])
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
a <- IP_data$region_name[i]
b <- IP_data$city_name[i]
return(c(a,b))  #(IP_data[i,])
}
}
}
get_Region_and_City(2931940067)
IP_data$region_name[654984]
library(iptools)
Covid_data <- read.csv("Covid_data.csv")
IP_data <- read.csv("IP2LOCATION-LITE-DB3.CSV")
colnames(IP_data) <- c("ip_from", "ip_to", "country_code", "country_name","region_name","city_name")
Covid_data$ip_class <- ip_classify(Covid_data$ip)
Covid_data$ip_numeric <- ip_to_numeric(Covid_data$ip)
#Getting IP ranges for only US
IP_data <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
#Function to find the IP address location with the two datasets we have
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(c(IP_data$region_name[i],IP_data$city_name[i]))
}
}
}
get_Region_and_City(2931940067)
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if(ip >= IP_data$ip_from[i] & ip <= IP_data$ip_to[i]){
return(c(IP_data$region_name[i],IP_data$city_name[i]))
}
}
return(c(NA,NA))
}
geoloc <- get_Region_and_City(Covid_data$ip)
warnings()
get_Region_and_City <- function(ip){
n <- nrow(IP_data)
for (i in 1:n) {
if((ip >= IP_data$ip_from[i]) & (ip <= IP_data$ip_to[i])){
return(c(IP_data$region_name[i],IP_data$city_name[i]))
}
}
return(c(NA,NA))
}
Covid_data <- Covid_data %>%
group_by(ip_numeric) %>%
arrange(ip_numeric)
get_Region_and_City(90722236)
geoloc <- get_Region_and_City(Covid_data$ip)
get_Region_and_City <- function(ip){
#n <- nrow(IP_data)
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from < ip & ip_to > ip)
#for (i in 1:n) {
#if((ip >= IP_data$ip_from[i]) & (ip <= IP_data$ip_to[i])){
# return(c(IP_data$region_name[i],IP_data$city_name[i]))
#}
#}
return(location)
}
get_Region_and_City(90722236)
geoloc <- get_Region_and_City(Covid_data$ip)
get_Region_and_City <- function(ip){
#n <- nrow(IP_data)
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
#for (i in 1:n) {
#if((ip >= IP_data$ip_from[i]) & (ip <= IP_data$ip_to[i])){
# return(c(IP_data$region_name[i],IP_data$city_name[i]))
#}
#}
return(location)
}
Covid_data$ip[1]
View(Covid_data)
get_Region_and_City(Covid_data$ip_numeric)
Covid_data$ip_numeric[1]
get_Region_and_City(Covid_data$ip_numeric[1])
Covid_data$ip_numeric[100]
Covid_data$ip_numeric[1000]
get_Region_and_City(Covid_data$ip_numeric[1000])
get_Region_and_City <- function(ip){
#n <- nrow(IP_data)
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location(,c(3,4))
#for (i in 1:n) {
#if((ip >= IP_data$ip_from[i]) & (ip <= IP_data$ip_to[i])){
# return(c(IP_data$region_name[i],IP_data$city_name[i]))
#}
#}
return(location)
}
get_Region_and_City(Covid_data$ip_numeric[1000])
get_Region_and_City <- function(ip){
#n <- nrow(IP_data)
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
#for (i in 1:n) {
#if((ip >= IP_data$ip_from[i]) & (ip <= IP_data$ip_to[i])){
# return(c(IP_data$region_name[i],IP_data$city_name[i]))
#}
#}
return(location)
}
get_Region_and_City(Covid_data$ip_numeric[1000])
get_Region_and_City <- function(data){
n <- nrow(data)
lction <- c()
for (i in 1:n) {
lction <- c(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
add_Region_and_City <- function(data){
n <- nrow(data)
lction <- c()
for (i in 1:n) {
lction <- c(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
return(location)
}
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
return(location)
}
add_Region_and_City(Covid_data$ip_numeric[1:10])
Covid_data$ip_numeric[1:10]
length(Covid_data$ip_numeric[1:10])
add_Region_and_City <- function(data){
n <- length(data)
lction <- c()
for (i in 1:n) {
lction <- c(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
add_Region_and_City(Covid_data$ip_numeric[1:10])
add_Region_and_City <- function(data){
n <- length(data)
lction <- as.data.frame()
for (i in 1:n) {
lction <- c(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
add_Region_and_City(Covid_data$ip_numeric[1:10])
add_Region_and_City <- function(data){
n <- length(data)
lction <- c()
for (i in 1:n) {
lction <- c(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
a <- add_Region_and_City(Covid_data$ip_numeric[1:10])
b <- get_Region_and_City(Covid_data$ip_numeric[1000])
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
a <- add_Region_and_City(Covid_data$ip_numeric[1:10])
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
if(nrow(location) != 0){
return(location)
}
return(data.frame( region_name = character(NA),
city_name = character(NA)))
}
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
a <- add_Region_and_City(Covid_data$ip_numeric[1:10])
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
return(location)
}
View(Covid_data)
Covid_data_sub <- Covid_data[complete.cases(Covid_data$ip_class),]
Covid_data_sub <- Covid_data_sub %>%
group_by(ip_numeric) %>%
arrange(ip_numeric)
#Function to find the IP address location with the two datasets we have
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
return(location)
}
b <- get_Region_and_City(Covid_data_sub$ip_numeric[1000])
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
return(lction)
}
a <- add_Region_and_City(Covid_data_sub$ip_numeric[1:10])
Covid_data_sub$ip_numeric[1:10]
n <- Covid_data_sub$ip_numeric[1:10]
n <- length(Covid_data_sub$ip_numeric[1:10])
lction <- data.frame( region_name = character(),
city_name = character())
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[i]))
}
lction <- data.frame( region_name = character(),
city_name = character())
lction <- rbind(lction, get_Region_and_City(Covid_data$ip_numeric[1]))
get_Region_and_City(Covid_data$ip_numeric[1])
Covid_data$ip_numeric[1]
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data_sub$ip_numeric[i]))
}
return(lction)
}
a <- add_Region_and_City(Covid_data_sub$ip_numeric[1:10])
get_Region_and_City(Covid_data_sub$ip_numeric[1])
get_Region_and_City(Covid_data_sub$ip_numeric[2])
get_Region_and_City(Covid_data_sub$ip_numeric[3])
get_Region_and_City(Covid_data_sub$ip_numeric[4])
get_Region_and_City(Covid_data_sub$ip_numeric[5])
get_Region_and_City(Covid_data_sub$ip_numeric[6])
get_Region_and_City(Covid_data_sub$ip_numeric[7])
get_Region_and_City(Covid_data_sub$ip_numeric[8])
get_Region_and_City(Covid_data_sub$ip_numeric[9])
get_Region_and_City(Covid_data_sub$ip_numeric[10])
Covid_data_sub$ip_numeric[7]
data.frame( region_name = "NotComplete",
city_name = "NotComplete")
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
if(nrow(location != 0))(
return(location)
)
return(data.frame( region_name = "NotComplete",
city_name = "NotComplete"))
}
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data_sub$ip_numeric[i]))
}
View(lction)
a <- add_Region_and_City(Covid_data_sub$ip_numeric[1:10])
library(iptools)
Covid_data <- read.csv("Covid_data.csv")
IP_data <- read.csv("IP2LOCATION-LITE-DB3.CSV")
colnames(IP_data) <- c("ip_from", "ip_to", "country_code", "country_name","region_name","city_name")
Covid_data$ip_class <- ip_classify(Covid_data$ip)
Covid_data$ip_numeric <- ip_to_numeric(Covid_data$ip)
#Getting IP ranges for only US
IP_data <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
Covid_data_sub <- Covid_data[complete.cases(Covid_data$ip_class),]
Covid_data_sub <- Covid_data_sub %>%
group_by(ip_numeric) %>%
arrange(ip_numeric)
#Function to find the IP address location with the two datasets we have
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
if(nrow(location != 0))(
return(location)
)
return(data.frame( region_name = "NotComplete",
city_name = "NotComplete"))
}
b <- get_Region_and_City(Covid_data_sub$ip_numeric[1000])
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(Covid_data_sub$ip_numeric[i]))
}
return(lction)
}
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(data[i]))
}
return(lction)
}
loc <- add_Region_and_City(Covid_data_sub$ip_numeric)
loc <- add_Region_and_City(Covid_data_sub$ip_numeric[1:1000])
loc2 <- add_Region_and_City(Covid_data_sub$ip_numeric[1000 : 5000])
Covid_data_sub$ip_numeric[5001]
View(Covid_data_sub)
View(IP_data)
x <- Covid_data_sub$ip_numeric[5001]
IP_data <- IP_data[IP_data$ip_from > x,]
View(IP_data)
loc3 <- add_Region_and_City(Covid_data_sub$ip_numeric[5001:10000])
library(iptools)
Covid_data <- read.csv("Covid_data.csv")
IP_data <- read.csv("IP2LOCATION-LITE-DB3.CSV")
colnames(IP_data) <- c("ip_from", "ip_to", "country_code", "country_name","region_name","city_name")
Covid_data$ip_class <- ip_classify(Covid_data$ip)
Covid_data$ip_numeric <- ip_to_numeric(Covid_data$ip)
#Getting IP ranges for only US
IP_data <- IP_data %>%
select(ip_from, ip_to, country_code, country_name, region_name, city_name) %>%
filter(country_code %in% "US")
Covid_data_sub <- Covid_data[complete.cases(Covid_data$ip_class),]
Covid_data_sub <- Covid_data_sub %>%
group_by(ip_numeric) %>%
arrange(ip_numeric)
#Function to find the IP address location with the two datasets we have
get_Region_and_City <- function(ip){
location <-  IP_data %>%
select(ip_from, ip_to, region_name, city_name) %>%
filter(ip_from <= ip & ip_to >= ip)
location <- location[,c(3,4)]
if(nrow(location != 0))(
return(location)
)
return(data.frame( region_name = "NotComplete",
city_name = "NotComplete"))
}
add_Region_and_City <- function(data){
n <- length(data)
lction <- data.frame( region_name = character(),
city_name = character())
for (i in 1:n) {
lction <- rbind(lction, get_Region_and_City(data[i]))
}
return(lction)
}
loc1 <- add_Region_and_City(Covid_data_sub$ip_numeric[1:1000])
loc2 <- add_Region_and_City(Covid_data_sub$ip_numeric[1000 : 5000])
x <- Covid_data_sub$ip_numeric[5000]
IP_data <- IP_data[IP_data$ip_from >= x,]
loc3 <- add_Region_and_City(Covid_data_sub$ip_numeric[5001:10000])
loc2 <- add_Region_and_City(Covid_data_sub$ip_numeric[1001 : 5000])
x <- Covid_data_sub$ip_numeric[5000]
IP_data <- IP_data[IP_data$ip_from >= x,]
loc3 <- add_Region_and_City(Covid_data_sub$ip_numeric[10000:11000])
loc3 <- add_Region_and_City(Covid_data_sub$ip_numeric[15000:16000])
loc3 <- add_Region_and_City(Covid_data_sub$ip_numeric[10000:11000])
loc4 <- add_Region_and_City(Covid_data_sub$ip_numeric[15000:16000])
GeoLocations <- rbind(loc1,loc1,loc3,loc4)
loc4 <- add_Region_and_City(Covid_data_sub$ip_numeric[10001:18000])
loc5 <- add_Region_and_City(Covid_data_sub$ip_numeric[10001:18000])
tm_shape(world) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "population_millions") +
tm_facets(along = "year", free.coords
tm_shape(world) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "population_millions") +
tm_facets(along = "year", free.coords = FALSE)
newData <- Covid_data_sub[c(1:1000,1001 : 5000,10000:11000,15000:16000, 10001:18000), ]
loc6 <- add_Region_and_City(Covid_data_sub$ip_numeric[25000:28000])
GeoLocations <- rbind(loc1,loc1, loc5, loc6)
newData <- Covid_data_sub[c(1:1000,1001 : 5000,10001:18000,25000:28000), ]
GeoLocations <- rbind(loc1,loc2, loc5, loc6)
newData <- c(newData, GeoLocations)
View(newData)
GeoLocations <- rbind(loc1,loc2, loc5, loc6)
newData <- Covid_data_sub[c(1:1000,1001 : 5000,10001:18000,25000:28000), ]
View(newData)
newData <- newData %>%
select(createdAt, faceCovering, gender,healthIssues, mentalHealthImpact,leftHomeTimes,ip_numeric)
newData <- c(newData, GeoLocations)
write.csv(newData, "Country_Region.csv")
